apiVersion: v1
kind: ConfigMap
metadata:
  name: metadata
  namespace: backend
data:
  applicationinsights.json: |-
    {
      "connectionString": "$(APP_INSIGHTS_CONNECTION_STRING)",
      "role": {
        "name": "Metadata Service"
      },
      "instrumentation": {
        "logging": {
          "level": "OFF"
        },
        "micrometer": {
          "enabled": true
        }
      },
      "heartbeat": {
        "intervalSeconds": 60
      }
    }
  application.yml: |-
    apidoc:
      title: EFS SDK Metadata-API
    azure:
      application-insights:
        instrumentation-key: $(APP_INSIGHTS_INSTRUMENTATION_KEY)
    sdk:
      oauth2:
        client-id: $(CLIENT_ID)
        authorization-grant-type: authorization_code
        scope: openid
        user-name-attribute: preferred_username
        config-url: http://keycloak$(postfix)-http.operations.svc.cluster.local/auth/realms/$(REALM)/.well-known/openid-configuration
    server:
      port: 8090
      servlet:
        context-path: /metadata
      error:
        include-message: always
    spring:
      kafka:
        admin:
          fail-fast: true
        bootstrap-servers: $(KAFKA_BOOTSTRAP_SERVER)
        properties:
          sasl:
            mechanism: PLAIN
          security:
            protocol: SASL_SSL
          group:
            id: $Default
    metadata:
      topics:
        indexing-done-topic: indexing-done
        metadata-update-topic: metadata-update
      opensearch:
        url: https://$(ELASTICSEARCH_SERVICE).elasticsearch.svc.cluster.local:9200
        security-endpoint: $(ELASTICSEARCH_SECURITY_ENDPOINT)
      auth:
        client-id: $(CLIENT_ID_CONFIDENTIAL)
      organizationmanager-endpoints:
        organization: http://organizationmanager$(postfix).backend.svc.cluster.local:8090/organizationmanager/api/v1.0/organization
        space: http://organizationmanager$(postfix).backend.svc.cluster.local:8090/organizationmanager/api/v1.0/space
    management:
      endpoints:
        web:
          exposure:
            include: [
                prometheus,
                health,
                info
            ]
      health:
        opensearch:
          enabled: false
    logging:
      config: classpath:com/efs/sdk/logging/sdk.logback.xml
      level:
        com.efs.sdk: $(LOG_LEVEL)
